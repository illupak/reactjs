{"version":3,"sources":["components/Logform.js","components/Mode.js","App.js","reportWebVitals.js","index.js"],"names":["Logform","props","React","createElement","Fragment","style","position","left","top","color","btn","className","type","id","placeholder","width","htmlFor","user","pass","href","role","Mode","concat","onClick","toggleStyle","for","App","setbtn","useState","document","body","backgroundColor","transform","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"8MAEe,SAASA,EAAQC,GAC9B,OACEC,IAAAC,cAAAD,IAAAE,SAAA,KACEF,IAAAC,cAAA,MAAIE,MAAO,CACTC,SAAU,WACVC,KAAK,MACLC,IAAI,OACJC,MAAmB,eAAZR,EAAMS,IAAmB,QAAQ,UACvCR,IAAAC,cAAA,SAAG,UACND,IAAAC,cAAA,OAAKQ,UAAU,sBACfT,IAAAC,cAAA,SAAOS,KAAK,WAAWD,UAAU,eAAeE,GAAG,gBAAgBC,YAAY,WAAWT,MAAO,CAAEU,MAAM,WACzGb,IAAAC,cAAA,SAAOa,QAAQ,iBAAiBf,EAAMgB,OAEtCf,IAAAC,cAAA,OAAKQ,UAAU,iBACbT,IAAAC,cAAA,SAAOS,KAAK,WAAWD,UAAU,eAAeE,GAAG,mBAAmBC,YAAY,WAAWT,MAAO,CAAEU,MAAM,WAC5Gb,IAAAC,cAAA,SAAOa,QAAQ,oBAAoBf,EAAMiB,MACvChB,IAAAC,cAAA,KAAGQ,UAAU,kBAAkBQ,KAAK,IAAIC,KAAK,SAASf,MAAO,CAC3DC,SAAU,WACVC,KAAK,MACLC,IAAI,SACH,WCrBE,SAASa,EAAKpB,GAI3B,OAEAC,IAAAC,cAAAD,IAAAE,SAAA,KACIF,IAAAC,cAAA,OAAKQ,UAAS,+BAAAW,OAA6C,eAAZrB,EAAMS,IAAmB,OAAO,UAC3ER,IAAAC,cAAA,SAAOQ,UAAU,mBAAmBC,KAAK,WAAWQ,KAAK,SAASP,GAAG,yBAAyBU,QAAStB,EAAMuB,cAC7GtB,IAAAC,cAAA,SAAOQ,UAAU,mBAAmBc,IAAI,0BAA0BxB,EAAMS,OC+BnEgB,MAhCf,WACE,MAAOhB,EAAIiB,GAAUC,mBAAS,cAU9B,OACC1B,IAAAC,cAAAD,IAAAE,SAAA,KAESF,IAAAC,cAACkB,EAAI,CAACG,YAZIA,KACL,eAARd,GACCiB,EAAO,aACPE,SAASC,KAAKzB,MAAM0B,gBAAkB,UAEtCJ,EAAO,cACPE,SAASC,KAAKzB,MAAM0B,gBAAkB,UAMJrB,IAAKA,IACrCR,IAAAC,cAAA,OAAME,MAAO,CACXC,SAAU,WACVE,IAAK,MACDD,KAAM,MACNyB,UAAW,0BAEf9B,IAAAC,cAACH,EAAO,CAACiB,KAAK,WAAWC,KAAK,WAAWR,IAAKA,OClB7CuB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWf,SAASgB,eAAe,SACpDC,OACH5C,IAAAC,cAACD,IAAM6C,WAAU,KACf7C,IAAAC,cAACuB,EAAG,QAORO,K","file":"static/js/main.beb670b5.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Logform(props) {\n  return (\n    <>\n      <h1 style={{\n        position: \"absolute\",\n        left:\"30%\",\n        top:\"-45%\",\n        color: props.btn==='Light Mode'?'black':'white' \n      }}><b>Login</b></h1>\n      <div className=\"form-floating mb-3\">\n      <input type=\"username\" className=\"form-control\" id=\"floatingInput\" placeholder=\"Username\" style={{ width:\"300px\" }}/>\n      <label htmlFor=\"floatingInput\">{props.user}</label>\n      </div>\n      <div className=\"form-floating\">\n        <input type=\"password\" className=\"form-control\" id=\"floatingPassword\" placeholder=\"Password\" style={{ width:\"300px\" }}/>\n        <label htmlFor=\"floatingPassword\">{props.pass}</label>\n          <a className=\"btn btn-primary\" href=\"/\" role=\"button\" style={{\n            position: \"absolute\",\n            left:\"40%\",\n            top:\"130%\"\n          }}>Login</a> \n      </div>\n       \n    </>\n  )\n}\n","import React from 'react'\nexport default function Mode(props) {\n    \n   \n\n  return (\n  \n  <>\n      <div className={`form-check form-switch text-${props.btn==='Light Mode'?'dark':'light'}`}  >\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.toggleStyle}/>\n          <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">{props.btn}</label>\n      </div>\n    </>\n  )\n}\n","//import logo from './logo.svg';\nimport './App.css';\nimport Logform from './components/Logform';\nimport Mode from './components/Mode';\nimport React, { useState } from 'react'\n// import Textform from './components/Textform';\n\n\n\nfunction App() {\n  const [btn,setbtn] = useState(\"Light Mode\")\n  const toggleStyle = () => {\n      if(btn === 'Light Mode'){\n          setbtn(\"Dark Mode\")\n          document.body.style.backgroundColor = 'black'\n      }else{\n          setbtn(\"Light Mode\")\n          document.body.style.backgroundColor = 'white'\n      }\n  }\n  return (\n   <>\n            \n            <Mode toggleStyle={toggleStyle} btn={btn} />\n            <div  style={{\n              position: \"absolute\",\n              top: \"50%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\"\n                }}>\n              <Logform user=\"Username\" pass=\"Password\" btn={btn} />\n              \n            </div>\n            {/* <div className=\"container\">\n              <Textform heading=\"Enter Text Here!!\"/>\n            </div> */}\n   </>\n  );\n  \n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}